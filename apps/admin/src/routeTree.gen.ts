/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteRouteImport } from './routes/home/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as AuthResetPwdRouteImport } from './routes/auth/reset-pwd'
import { Route as AuthNewPwdRouteImport } from './routes/auth/new-pwd'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as HomeMembersRouteRouteImport } from './routes/home/members/route'
import { Route as HomeMembersIndexRouteImport } from './routes/home/members/index'
import { Route as HomeMembersMemberIdRouteImport } from './routes/home/members/$memberId'

const HomeRouteRoute = HomeRouteRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRouteRoute,
} as any)
const AuthResetPwdRoute = AuthResetPwdRouteImport.update({
  id: '/reset-pwd',
  path: '/reset-pwd',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthNewPwdRoute = AuthNewPwdRouteImport.update({
  id: '/new-pwd',
  path: '/new-pwd',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const HomeMembersRouteRoute = HomeMembersRouteRouteImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => HomeRouteRoute,
} as any)
const HomeMembersIndexRoute = HomeMembersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeMembersRouteRoute,
} as any)
const HomeMembersMemberIdRoute = HomeMembersMemberIdRouteImport.update({
  id: '/$memberId',
  path: '/$memberId',
  getParentRoute: () => HomeMembersRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/home/members': typeof HomeMembersRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/new-pwd': typeof AuthNewPwdRoute
  '/auth/reset-pwd': typeof AuthResetPwdRoute
  '/home/': typeof HomeIndexRoute
  '/home/members/$memberId': typeof HomeMembersMemberIdRoute
  '/home/members/': typeof HomeMembersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/new-pwd': typeof AuthNewPwdRoute
  '/auth/reset-pwd': typeof AuthResetPwdRoute
  '/home': typeof HomeIndexRoute
  '/home/members/$memberId': typeof HomeMembersMemberIdRoute
  '/home/members': typeof HomeMembersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/home': typeof HomeRouteRouteWithChildren
  '/home/members': typeof HomeMembersRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/new-pwd': typeof AuthNewPwdRoute
  '/auth/reset-pwd': typeof AuthResetPwdRoute
  '/home/': typeof HomeIndexRoute
  '/home/members/$memberId': typeof HomeMembersMemberIdRoute
  '/home/members/': typeof HomeMembersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/home'
    | '/home/members'
    | '/auth/login'
    | '/auth/new-pwd'
    | '/auth/reset-pwd'
    | '/home/'
    | '/home/members/$memberId'
    | '/home/members/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/login'
    | '/auth/new-pwd'
    | '/auth/reset-pwd'
    | '/home'
    | '/home/members/$memberId'
    | '/home/members'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/home'
    | '/home/members'
    | '/auth/login'
    | '/auth/new-pwd'
    | '/auth/reset-pwd'
    | '/home/'
    | '/home/members/$memberId'
    | '/home/members/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  HomeRouteRoute: typeof HomeRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/auth/reset-pwd': {
      id: '/auth/reset-pwd'
      path: '/reset-pwd'
      fullPath: '/auth/reset-pwd'
      preLoaderRoute: typeof AuthResetPwdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/new-pwd': {
      id: '/auth/new-pwd'
      path: '/new-pwd'
      fullPath: '/auth/new-pwd'
      preLoaderRoute: typeof AuthNewPwdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/home/members': {
      id: '/home/members'
      path: '/members'
      fullPath: '/home/members'
      preLoaderRoute: typeof HomeMembersRouteRouteImport
      parentRoute: typeof HomeRouteRoute
    }
    '/home/members/': {
      id: '/home/members/'
      path: '/'
      fullPath: '/home/members/'
      preLoaderRoute: typeof HomeMembersIndexRouteImport
      parentRoute: typeof HomeMembersRouteRoute
    }
    '/home/members/$memberId': {
      id: '/home/members/$memberId'
      path: '/$memberId'
      fullPath: '/home/members/$memberId'
      preLoaderRoute: typeof HomeMembersMemberIdRouteImport
      parentRoute: typeof HomeMembersRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthNewPwdRoute: typeof AuthNewPwdRoute
  AuthResetPwdRoute: typeof AuthResetPwdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthNewPwdRoute: AuthNewPwdRoute,
  AuthResetPwdRoute: AuthResetPwdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface HomeMembersRouteRouteChildren {
  HomeMembersMemberIdRoute: typeof HomeMembersMemberIdRoute
  HomeMembersIndexRoute: typeof HomeMembersIndexRoute
}

const HomeMembersRouteRouteChildren: HomeMembersRouteRouteChildren = {
  HomeMembersMemberIdRoute: HomeMembersMemberIdRoute,
  HomeMembersIndexRoute: HomeMembersIndexRoute,
}

const HomeMembersRouteRouteWithChildren =
  HomeMembersRouteRoute._addFileChildren(HomeMembersRouteRouteChildren)

interface HomeRouteRouteChildren {
  HomeMembersRouteRoute: typeof HomeMembersRouteRouteWithChildren
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteRouteChildren: HomeRouteRouteChildren = {
  HomeMembersRouteRoute: HomeMembersRouteRouteWithChildren,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteRouteWithChildren = HomeRouteRoute._addFileChildren(
  HomeRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  HomeRouteRoute: HomeRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
